% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{distanceSummary}
\alias{distanceSummary}
\title{Summarise Distribution Distances Between Domains}
\usage{
distanceSummary(
  source,
  target,
  sigma = NULL,
  include = c("PAD", "MMD2", "Energy", "MMD", "Wasserstein", "Geodesic"),
  format = c("list", "table"),
  pad_folds = 5,
  pad_ridge = 0.001,
  pad_seed = NULL
)
}
\arguments{
\item{source}{Numeric matrix (n_s × p).}

\item{target}{Numeric matrix (n_t × p).}

\item{sigma}{Optional bandwidth for MMD; default \code{sigma_med(source, target)}.}

\item{include}{Character vector of metrics to include.}

\item{format}{\code{"list"} or \code{"table"}.}

\item{pad_folds, pad_ridge, pad_seed}{Controls for \code{\link{proxy_a_distance}}.}
}
\value{
Named list or data frame with metric values; when \code{format="table"},
an attribute \code{sigma_used} is attached.
}
\description{
\code{distanceSummary} computes selected metrics (PAD, MMD/MMD2, Energy,
Wasserstein, Geodesic) between \code{source} and \code{target}.
}
\examples{
\dontrun{
X <- matrix(rnorm(100), 20, 5); Y <- matrix(rnorm(100, 1), 20, 5)
distanceSummary(X, Y, format = "table")
}
}
\seealso{
\code{\link{compute_mmd}}, \code{\link{compute_wasserstein}}, \code{\link{compute_geodesic}}

Other domain-adaptation: 
\code{\link{euclidean_alignment}()},
\code{\link{evaluate_shift}()},
\code{\link{kmm_weights}()},
\code{\link{label_shift_em}()},
\code{\link{proxy_a_distance}()}
}
\concept{domain-adaptation}
