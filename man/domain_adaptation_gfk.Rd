% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gfk.R
\name{domain_adaptation_gfk}
\alias{domain_adaptation_gfk}
\title{Geodesic Flow Kernel (GFK) for Domain Adaptation}
\usage{
domain_adaptation_gfk(source_data, target_data, dim_subspace = 10)
}
\arguments{
\item{source_data}{A numeric matrix representing the source domain,
with rows as observations and columns as features.}

\item{target_data}{A numeric matrix representing the target domain,
with rows as observations and columns as features, having the same number
of columns as \code{source_data}.}

\item{dim_subspace}{An integer specifying the dimensionality of the principal
subspace retained for both source and target. Defaults to 10, but is capped
by \code{min(ncol(source_data), ncol(target_data))}.}
}
\value{
A list containing:
\describe{
\item{\code{weighted_source_data}}{The source data projected by the GFK matrix \code{G}.}
\item{\code{target_data}}{The target data projected by the same GFK matrix.}
\item{\code{G}}{A \eqn{d \times d} geodesic flow kernel derived from the PCA bases
of source and target.}
}
}
\description{
The \code{domain_adaptation_gfk} function computes a Geodesic Flow Kernel (GFK)
between source and target domains by modeling a continuous geodesic path
on the Grassmann manifold. It first extracts principal subspaces for both
domains via PCA, then integrates along the path between these two subspaces
to construct a kernel matrix \code{G}. Both source and target data are
subsequently projected by \code{G}, reducing domain discrepancies.
}
\details{
\strong{Geodesic Flow Kernel (GFK)} constructs a smooth interpolation on the
Grassmann manifold between the subspaces spanned by the top principal components
of \code{source_data} and \code{target_data}. By integrating along this geodesic,
the method yields a kernel \eqn{G} that can map source and target data into an
aligned feature space. This helps mitigate distribution shifts in domain adaptation
scenarios, particularly in applications where linear subspace methods are insufficient.
}
\examples{
\dontrun{
set.seed(123)
source_mat <- matrix(rnorm(200), nrow = 20, ncol = 10)
target_mat <- matrix(rnorm(200, mean = 2), nrow = 20, ncol = 10)

# Apply GFK with a subspace of dimension 5
gfk_result <- domain_adaptation_gfk(source_mat, target_mat, dim_subspace = 5)
aligned_source <- gfk_result$weighted_source_data
aligned_target <- gfk_result$target_data

# Inspect the resulting kernel
G_matrix <- gfk_result$G
dim(G_matrix)  # should match the feature dimension
}

}
