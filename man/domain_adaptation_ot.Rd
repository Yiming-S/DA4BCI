% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ot.R
\name{domain_adaptation_ot}
\alias{domain_adaptation_ot}
\title{Entropy-Regularized OT (Sinkhorn–Knopp) with Barycentric Mapping}
\usage{
domain_adaptation_ot(
  source_data,
  target_data,
  eps = 0.05,
  maxit = 500,
  tol = 1e-07,
  cost = c("sqeuclidean", "euclidean")
)
}
\arguments{
\item{source_data}{A numeric matrix of size \eqn{n \times d} (source samples by features).}

\item{target_data}{A numeric matrix of size \eqn{m \times d} (target samples by features).}

\item{eps}{Positive entropy regularization parameter (default \code{0.05}).}

\item{maxit}{Maximum Sinkhorn iterations (default \code{500}).}

\item{tol}{Stopping tolerance on marginal feasibility (default \code{1e-7}).}

\item{cost}{Cost type: \code{"sqeuclidean"} (default) or \code{"euclidean"}.}
}
\value{
A list containing:
\describe{
\item{\code{weighted_source_data}}{The barycentrically mapped source data \eqn{P X_t / (P \mathbf{1})}.}
\item{\code{target_data}}{The original target data (possibly to be used downstream).}
\item{\code{ot_plan}}{The OT coupling matrix \eqn{P \in \mathbb{R}^{n \times m}}.}
\item{\code{cost}}{The transport cost matrix \eqn{C}.}
\item{\code{epsilon}}{The regularization parameter actually used.}
\item{\code{iterations}}{Number of Sinkhorn iterations performed.}
\item{\code{converged}}{Logical flag indicating whether the marginal residual met \code{tol}.}
\item{\code{residual}}{Final infinity-norm marginal residual.}
}
}
\description{
The \code{domain_adaptation_ot} function computes a balanced, entropy-regularized
optimal transport (OT) coupling between \code{source_data} and \code{target_data}
using the Sinkhorn–Knopp iterations with uniform marginals. It then applies the
barycentric mapping \eqn{X_s \mapsto P X_t / (P \mathbf{1})} to align source samples
toward the target domain.
}
\details{
This function solves the balanced, entropy-regularized OT problem
\deqn{\min_{P \ge 0} \langle P, C \rangle + \epsilon \sum_{ij} P_{ij}(\log P_{ij} - 1)}
subject to \eqn{P \mathbf{1}_m = r}, \eqn{\mathbf{1}_n^\top P = c^\top}, where
\eqn{r = \mathbf{1}_n/n} and \eqn{c = \mathbf{1}_m/m}. The coupling is computed via
the Sinkhorn–Knopp updates with kernel \eqn{K = \exp(-C/\epsilon)}. The barycentric
map transports each source point to the convex combination of target points
weighted by the corresponding row of \eqn{P}.
}
\examples{
\dontrun{
set.seed(123)
src <- matrix(rnorm(100), nrow = 20, ncol = 5)
tgt <- matrix(rnorm(100, mean = 2), nrow = 20, ncol = 5)

ot_result <- domain_adaptation_ot(src, tgt, eps = 0.05, maxit = 1000, tol = 1e-8)
aligned_source <- ot_result$weighted_source_data
aligned_target <- ot_result$target_data
dim(aligned_source)  # 20 x 5
dim(aligned_target)  # 20 x 5
}

}
\references{
Cuturi, M. (2013). Sinkhorn Distances: Lightspeed Computation of Optimal Transport.
Advances in Neural Information Processing Systems, 26.
Courty, N., Flamary, R., Tuia, D., & Rakotomamonjy, A. (2017).
Optimal Transport for Domain Adaptation. IEEE TPAMI, 39(9), 1853–1865.
}
