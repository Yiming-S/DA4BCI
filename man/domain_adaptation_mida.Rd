% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mida.R
\name{domain_adaptation_mida}
\alias{domain_adaptation_mida}
\title{Maximum/Minimum Independence Domain Adaptation (MIDA)}
\usage{
domain_adaptation_mida(
  source_data,
  target_data,
  k = 10,
  sigma = 1,
  mu = 0.1,
  max = TRUE
)
}
\arguments{
\item{source_data}{A numeric matrix representing the source domain,
with rows as observations and columns as features.}

\item{target_data}{A numeric matrix representing the target domain,
with the same number of columns as \code{source_data}.}

\item{k}{An integer specifying the number of projected components
to retain in the final subspace. Default is 10.}

\item{sigma}{A numeric bandwidth parameter for the RBF kernel used
in the domain-adaptation procedure. Default is 1.}

\item{mu}{A numeric regularization term (default = 0.1) that balances
the independence objective against potential overfitting.}

\item{max}{A logical indicating whether to maximize (\code{TRUE}) or minimize
(\code{FALSE}) the domain dependence. Default is \code{TRUE}.}
}
\value{
A list containing:
\describe{
\item{\code{weighted_source_data}}{Source data transformed into the MIDA subspace.}
\item{\code{target_data}}{Target data transformed into the same MIDA subspace.}
\item{\code{eigenvalue}}{The matrix of top \code{k} eigenvectors used for the projection.}
}
}
\description{
The \code{domain_adaptation_mida} function augments source and target data with
domain labels (0 for source, 1 for target) and applies a kernel-based approach
(via HSIC) to either \emph{maximize} or \emph{minimize} the dependence between
the feature space and these domain labels. By setting \code{max = TRUE} or
\code{max = FALSE}, one can highlight or suppress domain-specific differences,
helping to better align source and target distributions for improved transfer.
}
\details{
\strong{MIDA (Maximum/Minimum Independence Domain Adaptation)} constructs
an RBF kernel for both feature data and domain labels, then formulates a
generalized eigenvalue problem under the HSIC framework. When \code{max = TRUE},
it seeks to maximize the association between features and the domain label,
potentially accentuating domain-specific structures. When \code{max = FALSE},
it aims to \emph{minimize} this association to reduce cross-domain discrepancy.
The parameter \code{mu} adds a regularization term that prevents overfitting
and stabilizes the solution in high-dimensional settings.
}
\examples{
\dontrun{
set.seed(123)
src <- matrix(rnorm(100), nrow = 20, ncol = 5)
tgt <- matrix(rnorm(100, mean = 3), nrow = 20, ncol = 5)

# Maximize domain dependence
res_mida_max <- domain_adaptation_mida(src, tgt, k = 3, sigma = 1, mu = 0.1, max = TRUE)
aligned_src_max <- res_mida_max$weighted_source_data

# Minimize domain dependence
res_mida_min <- domain_adaptation_mida(src, tgt, k = 3, sigma = 1, mu = 0.1, max = FALSE)
aligned_src_min <- res_mida_min$weighted_source_data
}

}
