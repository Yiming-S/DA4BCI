% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/riemannian.R
\name{domain_adaptation_riemannian}
\alias{domain_adaptation_riemannian}
\title{Riemannian-Distance-Based Alignment (RD)}
\usage{
domain_adaptation_riemannian(source_data, target_data)
}
\arguments{
\item{C_source}{A numeric covariance matrix (source).}

\item{C_target}{A numeric covariance matrix (target), having the same dimensions
as \code{C_source}.}
}
\value{
A list containing:
\describe{
\item{\code{riemannian_distance}}{The Riemannian distance computed between
\code{C_source} and \code{C_target}.}
\item{\code{C_source_aligned}}{The source covariance matrix after alignment,
approximating the target domain.}
\item{\code{rotation_matrix}}{A rotation matrix that aligns \code{C_source}
with \code{C_target} via singular value decomposition (SVD).}
}
}
\description{
The \code{domain_adaptation_riemannian} function measures the Riemannian distance
between two covariance matrices (\code{C_source} and \code{C_target}), then uses
a Procrustes-like alignment (via rotation) to map the source covariance into the
target domain. This approach is widely used in EEG or similar applications where
covariance-based alignment is beneficial to mitigate distribution shifts.
}
\details{
\enumerate{
\item \strong{Riemannian Distance} is calculated as \eqn{||\log(C_s^{-1/2} C_t C_s^{-1/2})||_F},
reflecting how far two covariance matrices are on the manifold.
\item \strong{Procrustes Alignment} uses SVD of both matrices (or one matrix
inversion plus SVD) to find a rotation that aligns their principal axes.
This step helps reduce distribution mismatch by making the source covariance
resemble that of the target.
}
}
\examples{
\dontrun{
# Suppose we have two covariance matrices from EEG data
set.seed(123)
C_s <- crossprod(matrix(rnorm(50), 10, 5))
C_t <- crossprod(matrix(rnorm(50, mean = 2), 10, 5))

rd_result <- domain_adaptation_riemannian(C_s, C_t)
cat("Riemannian distance =", rd_result$riemannian_distance, "\n")
str(rd_result$rotation_matrix)
}

}
