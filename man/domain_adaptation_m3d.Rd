% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/m3d.R
\name{domain_adaptation_m3d}
\alias{domain_adaptation_m3d}
\title{Manifold-based Multi-step Domain Adaptation (M3D)}
\usage{
domain_adaptation_m3d(
  source_data,
  source_labels,
  target_data,
  stage1 = list(method = "tca", control = list(k = NULL, sigma = 1)),
  stage2 = list(method = "sa", control = list(k = 10)),
  l_iter = 10,
  lambda_ridge = 0.01,
  eta_kernel = 0.1,
  label_offset = 0,
  expl_var = 0.9,
  max_dim = 30
)
}
\arguments{
\item{source_data}{A numeric matrix representing the source domain (rows = samples,
columns = features).}

\item{source_labels}{A factor or vector of class labels for the source domain.}

\item{target_data}{A numeric matrix representing the target domain with the same
number of columns as \code{source_data}.}

\item{stage1}{A list specifying the method and control parameters for the first
alignment stage (e.g., TCA, PCA). Default: \code{list(method = "tca", control = list(k = NULL, sigma = 1))}.}

\item{stage2}{A list specifying the method and control parameters for the second
alignment stage (e.g., SA). Default: \code{list(method = "sa", control = list(k = 10))}.}

\item{l_iter}{Number of iterations for label refinement and class-wise alignment. Default: 10.}

\item{lambda_ridge}{Regularization strength for the ridge regression step. Default: 1e-2.}

\item{eta_kernel}{Weight for class-aware kernel alignment term. Default: 0.1.}

\item{label_offset}{Optional offset to shift the pseudo-labels. Default: 0.}

\item{expl_var}{Explained variance threshold (used in PCA-based dimension selection). Default: 0.90.}

\item{max_dim}{Maximum cap for automatically selected subspace dimension. Default: 30.}
}
\value{
A list with:
\describe{
\item{\code{weighted_source_data}}{The aligned source features after two-stage transformation and M3D refinement.}
\item{\code{target_data}}{The aligned target features in the same latent manifold space.}
}
}
\description{
The \code{domain_adaptation_m3d} function performs two-stage manifold-based domain
adaptation using a dynamic distribution alignment strategy. It first reduces
domain discrepancy via kernel-based or subspace-based alignment (e.g., TCA, SA),
followed by iterative refinement of class-aware alignment with pseudo-labels.
}
\details{
\strong{Multi-step Manifold Alignment with Dynamic Distribution (M3D)} proceeds as:
\enumerate{
\item Use stage-1 transformation (e.g., TCA) to reduce marginal domain shift.
\item Apply optional stage-2 transformation (e.g., SA) to further align subspaces.
\item Construct a kernel matrix over aligned features and apply a class-aware MMD
penalty using pseudo-labels for the target domain.
\item Iteratively update pseudo-labels via ridge regression and recompute
dynamic alignment matrices.
\item Perform eigen-decomposition on the final kernel matrix to extract features
in the aligned manifold space.
}

This implementation is based on the M3D framework proposed in:
Luo, T. et al. (2024). M3D: Manifold-based domain adaptation with dynamic distribution for
non-deep transfer learning in cross-subject and cross-session EEG-based emotion recognition.
\emph{arXiv preprint arXiv:2404.15615}.
}
\examples{
\dontrun{
set.seed(1)
src <- matrix(rnorm(100 * 20), nrow = 100)
tgt <- matrix(rnorm(100 * 20, mean = 1), nrow = 100)
labels <- sample(1:3, 100, replace = TRUE)
out <- domain_adaptation_m3d(src, labels, tgt)
str(out$weighted_source_data)
str(out$target_data)
}

}
\references{
Luo, T., Zhang, J., Qiu, Y., Zhang, L., Hu, Y., Yu, Z., & Liang, Z. (2024).
M3D: Manifold-based domain adaptation with dynamic distribution for non-deep transfer learning
in cross-subject and cross-session EEG-based emotion recognition.
\emph{arXiv preprint} arXiv:2404.15615.
}
