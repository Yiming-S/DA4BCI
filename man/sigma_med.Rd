% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernels_metrics.R
\name{sigma_med}
\alias{sigma_med}
\title{Robust Median-Distance Heuristic for RBF Bandwidth}
\usage{
sigma_med(X, Y, m = 400, seed = NULL)
}
\arguments{
\item{X}{Numeric matrix (n_1 × p).}

\item{Y}{Numeric matrix (n_2 × p) with the same number of columns as \code{X}.}

\item{m}{Integer: maximum number of rows used. If total rows exceed \code{m},
a uniform without-replacement subsample is taken. Default \code{400}.}

\item{seed}{Optional integer seed for reproducibility.}
}
\value{
Positive scalar median Euclidean distance; \code{NA_real_} if insufficient data.
}
\description{
\code{sigma_med} concatenates \code{X} and \code{Y}, optionally subsamples rows,
computes all pairwise Euclidean distances, and returns their median as a robust
bandwidth heuristic.
}
\details{
If the combined sample size is \eqn{\le 2}, returns \code{NA_real_} with a warning.
If the median distance is zero (e.g., many duplicates), returns a machine-epsilon
positive constant.
}
\examples{
\dontrun{
set.seed(42)
X <- matrix(rnorm(100), 20, 5); Y <- matrix(rnorm(100, 1), 20, 5)
# Use all rows (N <= m)
sigma_all <- sigma_med(X, Y)

# Subsample at most 15 rows
sigma_sub <- sigma_med(X, Y, m = 15, seed = 1)
}
}
\seealso{
Other kernels-metrics: 
\code{\link{compute_distance_matrix}()},
\code{\link{compute_energy}()},
\code{\link{compute_mmd}()},
\code{\link{compute_wasserstein}()},
\code{\link{rbf_kernel}()}
}
\concept{kernels-metrics}
