% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distanceMetrics.R
\name{compute_geodesic}
\alias{compute_geodesic}
\title{Compute Geodesic (Grassmann) Distance}
\usage{
compute_geodesic(source, target, d = NULL)
}
\arguments{
\item{source}{Numeric matrix (n_s × p).}

\item{target}{Numeric matrix (n_t × p).  Must have the same number of columns
as \code{source}.}

\item{d}{Optional positive integer ≤ p.  If supplied, only the first
\code{d} orthonormal directions are kept after QR.  When
\code{NULL} (default), the full column rank of each matrix is
used.}
}
\value{
A single non-negative numeric value – the geodesic distance.
}
\description{
Treats each dataset’s column space as a subspace in ℝ^p.  It orthonormalises
those columns via QR decomposition (no PCA / eigen-decomposition), then
returns the geodesic distance between the two subspaces on the Grassmann
manifold.
}
\details{
\itemize{
\item The columns are centered (mean-removed) to avoid bias from column means.
\item QR provides an orthonormal basis without invoking PCA.
\item Principal angles are obtained from the singular values of
\(U^{\top}V\).  The Grassmann distance is the ℓ2-norm of those angles.
}
}
\examples{
set.seed(42)
src <- matrix(rnorm(300),  60, 5)
tgt <- matrix(rnorm(300, .5), 60, 5)
compute_geodesic(src, tgt)               # full rank
compute_geodesic(src, tgt, d = 3)        # compare 3-dim subspaces

}
